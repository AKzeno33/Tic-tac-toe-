import random

# define the game board
board = [' ' for x in range(10)]

# function to print the game board
def print_board(board):
    print('   |   |   ')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3] + ' ')
    print('   |   |   ')
    print('-----------')
    print('   |   |   ')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6] + ' ')
    print('   |   |   ')
    print('-----------')
    print('   |   |   ')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9] + ' ')
    print('   |   |   ')

# function to check if a player has won
def check_winner(board, player):
    return ((board[1] == board[2] == board[3] == player) or
            (board[4] == board[5] == board[6] == player) or
            (board[7] == board[8] == board[9] == player) or
            (board[1] == board[4] == board[7] == player) or
            (board[2] == board[5] == board[8] == player) or
            (board[3] == board[6] == board[9] == player) or
            (board[1] == board[5] == board[9] == player) or
            (board[3] == board[5] == board[7] == player))

# function to check if the board is full
def check_board_full(board):
    return ' ' not in board[1:]

# function to get the computer's move
def get_computer_move(board, computer):
    # check if the computer can win
    for i in range(1, 10):
        if board[i] == ' ':
            board[i] = computer
            if check_winner(board, computer):
                return i
            else:
                board[i] = ' '
    # check if the player can win and block them
    for i in range(1, 10):
        if board[i] == ' ':
            board[i] = player
            if check_winner(board, player):
                board[i] = computer
                return i
            else:
                board[i] = ' '
    # try to take one of the corners
    corners = [1, 3, 7, 9]
    available_corners = []
    for i in corners:
        if board[i] == ' ':
            available_corners.append(i)
    if len(available_corners) > 0:
        return random.choice(available_corners)
    # try to take the center
    if board[5] == ' ':
        return 5
    # take any edge
    edges = [2, 4, 6, 8]
    available_edges = []
    for i in edges:
        if board[i] == ' ':
            available_edges.append(i)
    if len(available_edges) > 0:
        return random.choice(available_edges)

# main game loop
while True:
    print_board(board)
    player = input("Enter your move (1-9): ")
    player = int(player)
    if board[player] != ' ':
        print("That space is already taken. Please try again.")
        continue
    board[player] = 'X'
    if check_winner(board, 'X'):
        print_board(board)
        print("Congratulations! You win!")
        break
    if check_board_full(board):
        print_board(board)
        print("The game is a draw.")
        break
    computer = 'O'
    computer_move = get_computer_move(board, computer)
    board[computer_move] = computer
    if check_winner(board, computer):
        print_board(board)
        print("Sorry, you lose.")
        break
    if check_board_full(board):
        print_board(board)
        print("The game is a draw.")
        break

print_board(board)
check_winner(board, player)
check_winner(board, player)
get_computer_move(board, player)